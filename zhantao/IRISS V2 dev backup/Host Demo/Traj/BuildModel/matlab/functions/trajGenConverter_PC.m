function trajGenConverter_PC(SDIR, MDIR, SCAN_NO_PC)
%trajGenConverter 2021-09-09 MJG 
%   This code loads the saved params .mat file and (attempts to) convert
%   those variables to the values that Martin's traj gen code requires
%   This is specifically for the PC; it will save the .mat to
%   the directory specified by MDIR 

% load the PC params, generated by process_PC.m 
load([SDIR 'params_PC_' num2str(SCAN_NO_PC,'%04i') '.mat'], ...
    'pc_pts_mm', 'OCTz_PC', 'TOI_PC');

% change notation (from my v2 to my v1, which is what's below...)
% I really I need to clean this up... 
TOI = TOI_PC;
pc_mm = pc_pts_mm;
OCTz = OCTz_PC;

% -- first we convert the {O} [mm] pts to {I} [mm] pts
% then we fit a surface to the PC {I} and extract whatever information that
% Matin's code will require.

% convert PC {O}[mm] pts to {I}[mm]
tempPCpts = [pc_mm ones(size(pc_mm,1),1)] * inv(TOI)';
PCpts_IRISS = tempPCpts(:,1:3);

% > XYZ_mm_IRISSframe_capsule
% the nx3 xyz pts {IRISS} [mm] used in the PC fitting..
% for Martin's code... 
XYZ_mm_IRISSframe_capsule = PCpts_IRISS;

% then fit surface to these points... {IRISS} frame [mm]
surfPC_IRISS = fit([PCpts_IRISS(:,1), PCpts_IRISS(:,2)], PCpts_IRISS(:,3), 'poly22'); 

% only want to fit across the actual data---not all the way out to the
% sides; so truncate the range:
padding = 1; % [mm] 
xlims = [min(PCpts_IRISS(:,1))-padding max(PCpts_IRISS(:,1))+padding];
ylims = [min(PCpts_IRISS(:,2))-padding max(PCpts_IRISS(:,2))+padding];

% get xy range
nn = 100;
xrange = linspace(xlims(1), xlims(2), nn)';
yrange = linspace(ylims(1), ylims(2), nn)';

% then get numbers 
xi = repmat(xrange, nn, 1);
yi = repelem(yrange, nn);

% eval surf model at each value of xi and yi 
zi = surfPC_IRISS(xi,yi); 

% get idx of deepest part of the PC fit 
[~, idx] = max(zi);

% > Center_post_IRISSframe
% this is a 3x1 in {IRISS} of the center of the PC in [mm]_IRISS 
% needed for Martin's code 
Center_post_IRISSframe = [xi(idx); yi(idx); zi(idx)];

% > PolyCoef_post_mm_IRISSframe 
%    PolyCoef_post_mm_IRISSframe = PolyCoef_mm_IRISSframe;
% a 1x6 of the poly22 surface fit coeff of the PC, in the {IRISS} frame!
PolyCoef_post_mm_IRISSframe = [surfPC_IRISS.p00 surfPC_IRISS.p10 surfPC_IRISS.p01 surfPC_IRISS.p20 surfPC_IRISS.p11 surfPC_IRISS.p02];

% > 'FX_IRISS', 'FY_IRISS','FZ_IRISS');
% the triangulation mesh points used in the PC surface fit... 
% for Martin's code... 
FX_IRISS = xi;
FY_IRISS = yi;
FZ_IRISS = zi;



% --- other params that Martin's code wants: 

% > 'OCTprobeZ_post'
% the value of OCTz [mm] when the scan was taken
OCTprobeZ_post = OCTz;
    
% > TIO_post
% inverted TOI; easy to calc:
TIO_post = inv(TOI);

% > IrisEllipseAxis_post_IRISSframe
% a 2x2 in IRISS frame
% it's the same as the one saved for the ACh... TODO: is this being used?
IrisEllipseAxis_post_IRISSframe = eye(2);

% > Center_front_IRISSframe
% just a constant 3x1 of zeros...
Center_front_IRISSframe = zeros(3,1); 

% > Radius_front_IRISSframe
% just a constant 2x2 of zeros...
Radius_front_IRISSframe = zeros(2);

% > PolyCoef_front_mm_IRISSframe
% just a constant 1x6 of zeros...
PolyCoef_front_mm_IRISSframe = zeros(1,6);

% > SurfacePolyOrd
% a constant 2
SurfacePolyOrd = 2;

% > IrisPlane_post_mm_IRISSframe
% a 4x1 that is the same as the one in the ACh file... is this needed?
IrisPlane_post_mm_IRISSframe = zeros(4,1); 

% --- save the data for Martin's code 
% now can save as the .mat file that Martin's code expects... 
% create unique filename 
timestamp = datestr(now,'YYYY-mm-DD_HHMMSSFFF');
% save this model data as a unique filename 
save([MDIR 'EyeModel_capsule_' timestamp '.mat'], ...
    'OCTprobeZ_post', ... 
    'TIO_post',...
    'Center_post_IRISSframe', ... 
    'IrisEllipseAxis_post_IRISSframe', ... 
    'PolyCoef_post_mm_IRISSframe', ... 
    'Center_front_IRISSframe', ... 
    'Radius_front_IRISSframe', ... 
    'PolyCoef_front_mm_IRISSframe', ... 
    'SurfacePolyOrd', ... 
    'IrisPlane_post_mm_IRISSframe', ... 
    'XYZ_mm_IRISSframe_capsule', ... 
    'FX_IRISS', 'FY_IRISS','FZ_IRISS',...
    'pc_mm'); % 2021-09-09 Mia

% then make a copy of this file and save the copy as 'EyeModel_capsule.mat',
% overwriting any previous model that's in the directory...
copyfile([MDIR 'EyeModel_capsule_' timestamp '.mat'], [MDIR 'EyeModel_capsule.mat']);

% disp(['Save data and params for PC: ' num2str(toc) ' s']);

end